{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/model/stock.ts","webpack:///./src/app/stock-charts/stock-charts.component.css","webpack:///./src/app/stock-charts/stock-charts.component.html","webpack:///./src/app/stock-charts/stock-charts.component.ts","webpack:///./src/app/stock-detail/stock-detail.component.css","webpack:///./src/app/stock-detail/stock-detail.component.html","webpack:///./src/app/stock-detail/stock-detail.component.ts","webpack:///./src/app/stocks.service.ts","webpack:///./src/app/stocks/stocks.component.css","webpack:///./src/app/stocks/stocks.component.html","webpack:///./src/app/stocks/stocks.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///vertx (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StocksComponent } from './stocks/stocks.component';\nimport { StockDetailComponent } from './stock-detail/stock-detail.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StockChartsComponent } from './stock-charts/stock-charts.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/stocks', pathMatch: 'full' },\n  { path: 'stocks', component: StocksComponent },\n  { path: 'detail/:symbol', component: StockDetailComponent },\n  { path: 'chart', component: StockChartsComponent },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"/* AppComponent's private CSS styles */\\nh1 {\\n    font-size: 1.2em;\\n    color: #999;\\n    margin-bottom: 0;\\n  }\\nh2 {\\n    font-size: 2em;\\n    margin-top: 0;\\n    padding-top: 0;\\n  }\\nnav a {\\n    padding: 5px 10px;\\n    text-decoration: none;\\n    margin-top: 10px;\\n    display: inline-block;\\n    background-color: #eee;\\n    border-radius: 4px;\\n  }\\nnav a:visited, a:link {\\n    color: #607D8B;\\n  }\\nnav a:hover {\\n    color: #039be5;\\n    background-color: #CFD8DC;\\n  }\\nnav a.active {\\n    color: #039be5;\\n  }\\n  \"","module.exports = \"<h1>{{title}}</h1>\\n<nav>\\n  <a routerLink=\\\"/stocks\\\">Stocks</a>\\n</nav>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Stocks Beta';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule }       from '@angular/core';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { MatTableModule} from '@angular/material';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { AppComponent } from './app.component';\nimport { StockDetailComponent } from './stock-detail/stock-detail.component';\nimport { StocksComponent } from './stocks/stocks.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { StocksService } from './stocks.service';\nimport { StockChartsComponent } from './stock-charts/stock-charts.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StockDetailComponent,\n    StocksComponent,\n    StockChartsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatTableModule,\n    MatCheckboxModule,\n    \n  ],\n  providers: [StocksService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Stock {\n    symbol: string;\n    quantity: number;\n    purchasePrice: number;\n    quote: number;\n}","module.exports = \"\"","module.exports = \"<p>\\n  stock-charts works!\\n</p>\\n<div #chart>\\n  <!-- Chart will appear here -->\\n</div>\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { StocksService } from '../stocks.service';\nimport { Stock } from '../model/stock';\nimport { StockDaily } from '../model/stock-daily';\nimport { Observable } from 'rxjs';\nimport 'plotly.js/lib/core'\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-stock-charts',\n  templateUrl: './stock-charts.component.html',\n  styleUrls: ['./stock-charts.component.css']\n})\nexport class StockChartsComponent implements OnInit {\n\n  stockMap : Map<String, StockDaily[]> = new Map<String, StockDaily[]>();\n  stock: Observable<StockDaily[]>;\n  date: Date[] = [];\n  price: number[] = [];\n  @ViewChild('chart') el: ElementRef;\n\n  constructor(  \n    private route: ActivatedRoute,\n    private router: Router,\n    private stocksService: StocksService\n  ) {\n    \n  }\n\n  ngOnInit() {\n    // this.route.paramMap\n    //   .map((params: ParamMap) => {\n    //       var stocks = params.getAll('stocks');\n    //       stocks.forEach(stock =>\n    //         this.stocksService.getStockDaily(stock).subscribe( stockDaily =>\n    //           this.stockMap.set(stock, stockDaily)\n    //         ));\n    //   })\n\n    this.stock = this.route.paramMap.pipe ( \n      switchMap(params => this.stocksService.getStockDaily(params.getAll(\"compare\")[0]))\n    );\n\n\n      // this.stock = this.route.paramMap\n      // .switchMap((params: ParamMap) =>\n      //   this.stocksService.getStockDaily(params.getAll(\"compare\")[0]));\n      \n      this.stock.subscribe(stock => {\n        \n        console.log(\"Data = \" + stock[0].date)\n        stock.forEach( stock => {\n          var dateTime = new Date(stock.date);\n          //console.log(\"Datetime = \" + dateTime)\n          this.date.push(dateTime)\n          this.price.push(stock.close)\n        })\n        this.createGraph();\n      })\n      \n  }\n\n  createGraph() : void {\n    const element = this.el.nativeElement\n    var data = [\n      {\n        //x: ['2013-10-04 22:23:00', '2013-11-04 22:23:00', '2013-12-04 22:23:00'],\n        //y: [1, 3, 6],\n        x: this.date,\n        y: this.price,\n        type: 'scatter'\n      }\n    ];\n    \n    Plotly.newPlot(element, data);\n  \n  }\n}\n","module.exports = \"\"","module.exports = \"<h4>Quote</h4>\\n<div *ngIf=\\\"quote\\\">\\n  <h2>{{ quote.symbol | uppercase }} Details</h2>\\n  <div><span>price: </span>{{quote.latestPrice}}</div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Stock } from '../model/stock';\nimport { Quote } from '../model/quote';\nimport { StocksService } from \"../stocks.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n\n\n@Component({\n  selector: 'app-stock-detail',\n  templateUrl: './stock-detail.component.html',\n  styleUrls: ['./stock-detail.component.css']\n})\nexport class StockDetailComponent implements OnInit {\n\n  @Input() stock: Stock;\n  quote: Quote;\n  constructor(\n    private route: ActivatedRoute,\n    private location: Location,\n    private stocksService: StocksService\n  ) { }\n\n  ngOnInit() {\n    this.fetchQuote();\n  }\n  fetchQuote() {\n    const symbol = this.route.snapshot.paramMap.get('symbol');\n    console.log(\"Fetching quote: \" + symbol)\n    this.stocksService.getQuote(symbol)\n      .subscribe(quote => this.quote = quote);\n  }\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Stock } from './model/stock';\nimport { StockDaily } from './model/stock-daily';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable ,  of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Quote } from './model/quote'\nimport { AccountHealth } from './account-health';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class StocksService {\n  private stocksUrl = 'http://localhost:8080/stocks';\n  constructor(private http: HttpClient) { }\n\n  getStocks (): Observable<Stock[]> {\n    return this.http.get<Stock[]>(this.stocksUrl)\n  }\n\n  addStock (stock: Stock): Observable<Stock> {\n    this.log(`Adding stock ${stock.symbol} ${stock.purchasePrice} ${stock.quantity}`)\n    return this.http.post<Stock>(this.stocksUrl, stock, httpOptions).pipe(\n      tap((stock: Stock) => this.log(`added stock w/ symbol=${stock.symbol}`)),\n      catchError(this.handleError<Stock>('addStock'))\n    );\n  }\n\n  deleteStock (stock: Stock | number): Observable<Stock> {\n    const id = typeof stock === 'number' ? stock : stock.symbol;\n    const url = `${this.stocksUrl}/${id}`;\n\n    return this.http.delete<Stock>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted stock id=${id}`)),\n      catchError(this.handleError<Stock>('deleteStock'))\n    );\n  }\n\n  getQuote (symbol: String): Observable<Quote> {\n    console.log(\"Stock service getting quote: \" + symbol)\n    return this.http.get<Quote>(this.stocksUrl + \"/quote/\" + symbol)\n  }\n    /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a StockService message with the MessageService */\n  private log(message: string) {\n    console.log('Stock Service: ' + message);\n  }\n\n  getStockDaily(symbol: String) : Observable<StockDaily[]> {\n    return this.http.get<StockDaily[]>(this.stocksUrl + \"/daily/\" + symbol)\n  }\n\n  getAccountHealth() : Observable<AccountHealth> {\n    console.log(\"Getting account health\");\n    return this.http.get<AccountHealth>(this.stocksUrl + \"/account/health\");\n  }\n}\n","module.exports = \"  .stocks {\\n    margin: 0 0 2em 0;\\n    list-style-type: none;\\n    padding: 0;\\n    width: 17em;\\n  }\\n  .stocks li {\\n    position: relative;\\n    cursor: pointer;\\n    background-color: #EEE;\\n    margin: .5em;\\n    padding: .3em 0;\\n    height: 1.6em;\\n    border-radius: 4px;\\n  }\\n  .stocks li:hover {\\n    color: #607D8B;\\n    background-color: #DDD;\\n    left: .1em;\\n  }\\n  .stocks a {\\n    color: #888;\\n    text-decoration: none;\\n    position: relative;\\n    display: block;\\n    width: 250px;\\n  }\\n  .stocks a:hover {\\n    color:#607D8B;\\n  }\\n  .stocks .badge {\\n    display: inline-block;\\n    font-size: small;\\n    color: white;\\n    padding: 0.8em 0.7em 0 0.7em;\\n    background-color: #607D8B;\\n    line-height: 1em;\\n    position: relative;\\n    left: -1px;\\n    top: -4px;\\n    height: 1.8em;\\n    min-width: 16px;\\n    text-align: right;\\n    margin-right: .8em;\\n    border-radius: 4px 0 0 4px;\\n  }\\n  .button {\\n    background-color: #eee;\\n    border: none;\\n    padding: 5px 10px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    cursor: hand;\\n    font-family: Arial;\\n  }\\n  button:hover {\\n    background-color: #cfd8dc;\\n  }\\n  button.delete {\\n    position: relative;\\n    left: 220px;\\n    top: -32px;\\n    background-color: gray !important;\\n    color: white;\\n  }\\n  .example-container {\\n    display: flex;\\n    flex-direction: column;\\n    max-height: 500px;\\n    min-width: 300px;\\n  }\\n  .mat-table {\\n    overflow: auto;\\n    max-height: 500px;\\n  }\\n  .mat-column-select {\\n    overflow: visible;\\n  }\\n\"","module.exports = \"<h2>{{title}}</h2>\\n\\n<div>\\n  <label>Add stock:\\n    <input #stockName />\\n  </label>\\n  <label>Purchase Price:\\n    <input #purchasePrice />\\n  </label>\\n  <label>Quantity:\\n    <input #quantity />\\n  </label>\\n  <!-- (click) passes input value to add() and then clears the input -->\\n  <button (click)=\\\"add(stockName.value, purchasePrice.value, quantity.value); stockName.value=''; purchasePrice.value=''; quantity.value='' \\\">\\n    add\\n  </button>\\n</div>\\n\\n<button (click)=\\\"printSelection()\\\">Print Selected</button>\\n<button (click)=\\\"deleteSelected()\\\">Delete Selected</button>\\n<button routerLink=\\\"/chart\\\"(click)=\\\"chartSelected()\\\">Chart Selected</button>\\n<button (click)=\\\"detailSelected()\\\">Detail Selected</button>\\n\\n<ul class=\\\"stocks\\\">\\n  <li *ngFor=\\\"let stock of stocks\\\"\\n      [class.selected]=\\\"stock === selectedStock\\\">\\n    <a routerLink=\\\"/detail/{{stock.symbol}}\\\" (click)=\\\"onSelect(stock)\\\">\\n      <span class=\\\"badge\\\">{{stock.symbol}}</span> {{stock.quantity}} shares @ ${{stock.purchasePrice}}\\n    </a>\\n    <button class=\\\"delete\\\" title=\\\"delete stock\\\"\\n    (click)=\\\"delete(stock)\\\">x</button>\\n  </li>\\n</ul>\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <ng-container matColumnDef=\\\"select\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n          </mat-checkbox>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                        [checked]=\\\"selection.isSelected(row)\\\">\\n          </mat-checkbox>\\n        </mat-cell>\\n      </ng-container>\\n\\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"symbol\\\">\\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let stock\\\"> {{stock.symbol}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Purchase Price Column -->\\n    <ng-container matColumnDef=\\\"purchasePrice\\\">\\n      <mat-header-cell *matHeaderCellDef> Purchase Price </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let stock\\\"> {{stock.purchasePrice}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Quantity Column -->\\n    <ng-container matColumnDef=\\\"quantity\\\">\\n      <mat-header-cell *matHeaderCellDef> Quantity </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let stock\\\"> {{stock.quantity}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Quote Column -->\\n    <ng-container matColumnDef=\\\"quote\\\">\\n        <mat-header-cell *matHeaderCellDef> Quote </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let stock\\\"> {{stock.quote}} </mat-cell>\\n      </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n             (click)=\\\"selection.toggle(row)\\\">\\n    </mat-row>\\n  </mat-table>\\n</div>\\n\\n<div *ngIf=\\\"accountHealth\\\">\\n  <h3>Total Value: {{accountHealth.value}}</h3>\\n  <h3>Total Gain: {{accountHealth.gain}}</h3>\\n</div>\\n<!--<app-stock-detail [stock]=\\\"selectedStock\\\"></app-stock-detail>-->\\n\"","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Stock } from '../model/stock';\nimport { AccountHealth } from '../account-health';\nimport { StocksService} from '../stocks.service';\nimport { MatTableDataSource } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Observable ,  forkJoin } from 'rxjs';\nimport { Quote } from '../model/quote';\nimport { mergeMap } from 'rxjs/operators';\n\n\n\n\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-stocks',\n  templateUrl: './stocks.component.html',\n  styleUrls: ['./stocks.component.css']\n})\n\nexport class StocksComponent implements OnInit, AfterViewInit {\n  stocks: Stock[];\n  accountHealth: AccountHealth;\n  constructor(\n    private router: Router,\n    private stocksService: StocksService) { }\n  title = 'My Stocks';\n  selectedStock : Stock;\n  displayedColumns = ['select', 'symbol', 'purchasePrice', 'quantity', 'quote'];\n  dataSource = new MatTableDataSource<Stock>();\n  selection = new SelectionModel<Stock>(true, []);\n\n  ngOnInit() {\n    this.getAccountHealth();\n  }\n  ngAfterViewInit() {\n    this.getStocks();\n    \n  }\n\n\n  getStocks(): void {\n\n    this.stocksService.getStocks().pipe(\n    )\n    // TODO fix this\n    // this.stocksService.getStocks()\n    //    .mergeMap((stocks : Array<Stock>) => {\n    //      return Observable.forkJoin(\n    //        stocks.map((stock : Stock) => {\n    //         this.stocksService.getQuote(stock.symbol).subscribe( (quote: Quote) => stock.quote = quote.latestPrice );\n    //         return Observable.of(stock);\n    //        }\n    //      ));\n    //    }).subscribe(stocks => {\n    //      this.dataSource.data = stocks;\n    //      //this.stocks = stocks;\n    //    });    \n  }\n\n\n  getQuote(symbol): Observable<Quote> {\n    return this.stocksService.getQuote(symbol);\n  }\n\n  getAccountHealth(): void {\n    this.stocksService.getAccountHealth()\n    .subscribe( accountHealth => {\n      //console.log(\"Acc \" + accountHealth.gain)\n      this.accountHealth = accountHealth; \n    });\n  }\n\n\n  add(symbol: string, purchasePrice: number, quantity: number): void {\n    symbol = symbol.trim();\n    if (!symbol || !purchasePrice || !quantity) { return; }\n    this.stocksService.addStock({ symbol, purchasePrice, quantity } as Stock)\n      .subscribe(stock => {\n        //this.stocks.push(stock);\n        this.dataSource.data.push(stock);\n        this.dataSource._updateChangeSubscription();\n    });\n  }\n\n  delete(stock: Stock): void {\n    this.dataSource.data = this.dataSource.data.filter(h => h !== stock);\n    this.stocksService.deleteStock(stock).subscribe();\n    this.dataSource._updateChangeSubscription();\n  }\n\n  onSelect(stock: Stock) {\n    console.log(\"Selected \" + stock.symbol)\n    this.selectedStock = stock;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  printSelection() : void {\n    console.log(this.selection);\n  }\n  deleteSelected(): void {\n    this.selection.selected.forEach( stock => this.delete(stock) );\n  }\n  chartSelected(): void {\n    //this.selection.selected.forEach( stock => this.delete(stock) )\n    let compare: String[] = [];\n    this.selection.selected.forEach(stock => compare.push(stock.symbol));\n    console.log(\"Charting \" + compare);\n    this.router.navigate(['/chart', { compare }]);\n\n  }\n  detailSelected(): void {\n    this.router.navigate(['/detail/' + this.selection.selected[0].symbol]);\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}